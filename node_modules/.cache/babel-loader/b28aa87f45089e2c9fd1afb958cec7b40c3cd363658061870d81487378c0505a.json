{"ast":null,"code":"import _objectSpread from\"/Users/adambower/Dev/ab-civil-website-preview/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import'./ConfirmationPage.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ConfirmationPage=_ref=>{let{title=\"Thank You!\",message=\"Your submission has been received.\",submissionData=null,showDetails=false,onNewSubmission=null,customContent=null,referenceNumber=null,estimatedResponseTime=null,uploadedFiles=null}=_ref;// Debug logging for production\nconsole.log('[ConfirmationPage] Props received:',{hasUploadedFiles:!!uploadedFiles,uploadedFilesLength:uploadedFiles?uploadedFiles.length:0,uploadedFiles:uploadedFiles});const formatValue=value=>{if(value===null||value===undefined||value===''){return'N/A';}if(Array.isArray(value)){// Check if array contains objects (like contacts)\nif(value.length>0&&typeof value[0]==='object'){return'See details below';}return value.length>0?value.join(', '):'None selected';}if(typeof value==='boolean'){return value?'Yes':'No';}if(typeof value==='object'){return JSON.stringify(value,null,2);}return String(value);};const formatFieldName=fieldName=>{return fieldName.replace(/_/g,' ').replace(/([A-Z])/g,' $1').replace(/^./,str=>str.toUpperCase()).trim();};// Format file size\nconst formatFileSize=bytes=>{if(!bytes||bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return Math.round(bytes/Math.pow(k,i)*100)/100+' '+sizes[i];};// Get file type info based on filename\nconst getFileTypeInfo=filename=>{if(!filename)return{label:'FILE',className:'file-type-default'};const ext=filename.split('.').pop().toLowerCase();if(['pdf'].includes(ext))return{label:'PDF',className:'file-type-pdf'};if(['jpg','jpeg','png','gif','webp','bmp'].includes(ext))return{label:'IMG',className:'file-type-image'};if(['zip','rar','7z'].includes(ext))return{label:'ZIP',className:'file-type-archive'};if(['dwg','dxf','dwf'].includes(ext))return{label:'CAD',className:'file-type-cad'};if(['xls','xlsx','xlsm'].includes(ext))return{label:'XLS',className:'file-type-excel'};if(['txt','csv'].includes(ext))return{label:'TXT',className:'file-type-text'};if(['rvt','rfa','ifc'].includes(ext))return{label:'BIM',className:'file-type-bim'};return{label:'FILE',className:'file-type-default'};};// Organize files by folder structure\nconst organizeFilesByFolder=files=>{const folderStructure={};files.forEach(file=>{// Get the folder path from the file\nconst folderPath=file.folder||(file.relativePath?file.relativePath.substring(0,file.relativePath.lastIndexOf('/')):'');// If no folder, put in root\nconst folder=folderPath||'root';if(!folderStructure[folder]){folderStructure[folder]=[];}folderStructure[folder].push(file);});return folderStructure;};const UploadedFilesSection=()=>{const[isExpanded,setIsExpanded]=useState(false);const[expandedFolders,setExpandedFolders]=useState({});const folderStructure=organizeFilesByFolder(uploadedFiles);const folderNames=Object.keys(folderStructure).sort((a,b)=>{if(a==='root')return-1;if(b==='root')return 1;return a.localeCompare(b);});const toggleExpanded=()=>{setIsExpanded(!isExpanded);};const toggleFolder=folderName=>{setExpandedFolders(prev=>_objectSpread(_objectSpread({},prev),{},{[folderName]:!prev[folderName]}));};// Count total files\nconst totalFiles=uploadedFiles.length;const totalFolders=folderNames.filter(name=>name!=='root').length;return/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-files-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-files-header clickable\",onClick:toggleExpanded,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"confirmation-chevron \".concat(isExpanded?'expanded':''),width:\"20\",height:\"20\",viewBox:\"0 0 20 20\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M6 8l4 4 4-4\"})}),/*#__PURE__*/_jsxs(\"h2\",{className:\"confirmation-files-title\",children:[\"Uploaded Files\",/*#__PURE__*/_jsxs(\"span\",{className:\"files-summary\",children:[\"(\",totalFiles,\" \",totalFiles===1?'file':'files',totalFolders>0?\" in \".concat(totalFolders,\" \").concat(totalFolders===1?'folder':'folders'):'',\")\"]})]})]}),isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-files-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-folders-list\",children:folderNames.map(folderName=>{const isFolder=folderName!=='root';const isFolderExpanded=expandedFolders[folderName]!==false;const files=folderStructure[folderName];return/*#__PURE__*/_jsx(\"div\",{className:isFolder?\"folder-group\":\"root-files\",children:isFolder?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"folder-header\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"folder-icon\",width:\"15\",height:\"15\",viewBox:\"0 0 16 16\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.826a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3z\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"folder-name\",children:folderName}),/*#__PURE__*/_jsxs(\"span\",{className:\"folder-file-count\",children:[\"(\",files.length,\" files)\"]})]}),files.map((file,index)=>{const fileType=getFileTypeInfo(file.filename||file.name);return/*#__PURE__*/_jsx(\"div\",{className:\"file-item compact\",style:{marginLeft:'20px',borderLeft:'1px dashed #d1d5db'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"file-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"file-type-badge \".concat(fileType.className),children:fileType.label}),/*#__PURE__*/_jsx(\"span\",{className:\"file-name\",children:file.filename||file.name}),/*#__PURE__*/_jsx(\"span\",{className:\"file-size\",children:formatFileSize(file.size)})]})},index);})]}):files.map((file,index)=>{const fileType=getFileTypeInfo(file.filename||file.name);return/*#__PURE__*/_jsx(\"div\",{className:\"file-item compact\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"file-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"file-type-badge \".concat(fileType.className),children:fileType.label}),/*#__PURE__*/_jsx(\"span\",{className:\"file-name\",children:file.filename||file.name}),/*#__PURE__*/_jsx(\"span\",{className:\"file-size\",children:formatFileSize(file.size)})]})},index);})},folderName);})})})]});};const SubmissionDetails=()=>{const[isExpanded,setIsExpanded]=useState(true);const[expandedSections,setExpandedSections]=useState({});React.useEffect(()=>{// Initialize all sections as expanded\nif(submissionData){const initialExpanded={};Object.keys(submissionData).forEach(key=>{if(typeof submissionData[key]==='object'&&submissionData[key]!==null){initialExpanded[key]=true;}});setExpandedSections(initialExpanded);}},[]);const toggleMainDetails=()=>{setIsExpanded(!isExpanded);};const toggleSection=sectionKey=>{setExpandedSections(prev=>_objectSpread(_objectSpread({},prev),{},{[sectionKey]:!prev[sectionKey]}));};const renderValue=(key,value)=>{// Skip fields that are N/A, null, undefined, or empty\nconst shouldSkipField=(fieldKey,fieldValue)=>{var _submissionData$addit,_submissionData$addit2,_submissionData$addit3;// Fields to skip for all forms\nconst alwaysSkipFields=['platform','platform_other','dealer_name','contractor_name','other_source_detail','fileAttachments','phone','state'];// Takeoff-specific fields to skip when serviceType is \"3D Model\"\nconst takeoffFields=['cadAvailable','scopeOptions','strippingDepth','replacementDepth'];// Model-specific fields to skip when serviceType is \"Takeoff\"\nconst modelFields=['revision','fileFormats','additionalRequests','erosionSurfaceDueDate','advancedUtilities','structureCount'];// Skip if it's an always-skip field (regardless of value for fileAttachments)\nif(alwaysSkipFields.includes(fieldKey)){return true;}// Skip takeoff fields for 3D Model forms\nif((submissionData===null||submissionData===void 0?void 0:submissionData.serviceType)==='3D Model'&&takeoffFields.includes(fieldKey)){return true;}// Skip model fields for Takeoff forms\nif((submissionData===null||submissionData===void 0?void 0:submissionData.serviceType)==='Takeoff'&&modelFields.includes(fieldKey)){return true;}// Skip conditional fields that weren't selected/enabled\n// Hide erosion surface due date if Initial Erosion Surface wasn't selected\nif(fieldKey==='erosionSurfaceDueDate'&&(!(submissionData!==null&&submissionData!==void 0&&(_submissionData$addit=submissionData.additionalRequests)!==null&&_submissionData$addit!==void 0&&_submissionData$addit.includes('Initial Erosion Surface'))||!fieldValue)){return true;}// Hide advanced utilities if 3D/Elevated Pipe wasn't selected OR if advanced utilities checkbox wasn't checked\nif(fieldKey==='advancedUtilities'&&(!(submissionData!==null&&submissionData!==void 0&&(_submissionData$addit2=submissionData.additionalRequests)!==null&&_submissionData$addit2!==void 0&&_submissionData$addit2.includes('3D/Elevated Pipe'))||!fieldValue)){return true;}// Hide structure count if 3D/Elevated Pipe wasn't selected OR advanced utilities isn't enabled or has no value\nif(fieldKey==='structureCount'&&(!(submissionData!==null&&submissionData!==void 0&&(_submissionData$addit3=submissionData.additionalRequests)!==null&&_submissionData$addit3!==void 0&&_submissionData$addit3.includes('3D/Elevated Pipe'))||!(submissionData!==null&&submissionData!==void 0&&submissionData.advancedUtilities)||!fieldValue)){return true;}// Hide project info and special instructions if empty\nif((fieldKey==='projectInfo'||fieldKey==='specialInstructions')&&(!fieldValue||fieldValue===null||fieldValue===undefined||fieldValue==='')){return true;}return false;};// Don't render if this field should be skipped\nif(shouldSkipField(key,value)){return null;}// Handle arrays of objects (like contacts)\nif(Array.isArray(value)&&value.length>0&&typeof value[0]==='object'){const sectionExpanded=expandedSections[key]!==false;return/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-section-header clickable\",onClick:()=>toggleSection(key),children:[/*#__PURE__*/_jsx(\"svg\",{className:\"confirmation-dropdown-arrow \".concat(sectionExpanded?'expanded':''),width:\"12\",height:\"12\",viewBox:\"0 0 12 12\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M3 5l3 3 3-3z\"})}),/*#__PURE__*/_jsxs(\"h3\",{className:\"confirmation-section-title\",children:[formatFieldName(key),\" (\",value.length,\")\"]})]}),sectionExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-section-body\",children:value.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-section-content\",style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{margin:'10px 0 5px 0'},children:[formatFieldName(key).slice(0,-1),\" \",index+1]}),Object.entries(item).filter(_ref2=>{let[subKey,subValue]=_ref2;return!shouldSkipField(subKey,subValue);}).map(_ref3=>{let[subKey,subValue]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-detail-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"confirmation-detail-label\",children:[formatFieldName(subKey),\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"confirmation-detail-value\",children:formatValue(subValue)})]},subKey);})]},index))})]},key);}// Handle single objects\nif(typeof value==='object'&&!Array.isArray(value)&&value!==null){const filteredEntries=Object.entries(value).filter(_ref4=>{let[subKey,subValue]=_ref4;return!shouldSkipField(subKey,subValue);});// Don't render empty sections\nif(filteredEntries.length===0)return null;const sectionExpanded=expandedSections[key]!==false;return/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-section-header clickable\",onClick:()=>toggleSection(key),children:[/*#__PURE__*/_jsx(\"svg\",{className:\"confirmation-dropdown-arrow \".concat(sectionExpanded?'expanded':''),width:\"12\",height:\"12\",viewBox:\"0 0 12 12\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M3 5l3 3 3-3z\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"confirmation-section-title\",children:formatFieldName(key)})]}),sectionExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-section-body\",children:/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-section-content\",children:filteredEntries.map(_ref5=>{let[subKey,subValue]=_ref5;return/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-detail-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"confirmation-detail-label\",children:[formatFieldName(subKey),\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"confirmation-detail-value\",children:formatValue(subValue)})]},subKey);})})})]},key);}return/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-detail-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"confirmation-detail-label\",children:[formatFieldName(key),\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"confirmation-detail-value\",children:formatValue(value)})]},key);};if(!submissionData||!showDetails)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-details-header\",onClick:toggleMainDetails,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"confirmation-dropdown-arrow \".concat(isExpanded?'expanded':''),width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M4 6l4 4 4-4z\"})}),/*#__PURE__*/_jsx(\"h2\",{className:\"confirmation-details-title\",children:\"Submission Details\"})]}),isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-details-content\",children:Object.entries(submissionData).map(_ref6=>{let[key,value]=_ref6;return renderValue(key,value);})})]});};return/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-icon\",children:/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",className:\"checkmark-icon\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"22 4 12 14.01 9 11.01\"})]})}),/*#__PURE__*/_jsx(\"h1\",{className:\"confirmation-title\",children:title}),/*#__PURE__*/_jsx(\"p\",{className:\"confirmation-message\",children:message}),customContent&&/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-custom-content\",children:customContent}),submissionData&&showDetails&&/*#__PURE__*/_jsx(SubmissionDetails,{}),uploadedFiles&&uploadedFiles.length>0?/*#__PURE__*/_jsx(UploadedFilesSection,{}):console.log('[ConfirmationPage] No uploaded files to display'),/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"If you have any questions, please contact us at support@ab-civil.com\"})})]})});};export default ConfirmationPage;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ConfirmationPage","_ref","title","message","submissionData","showDetails","onNewSubmission","customContent","referenceNumber","estimatedResponseTime","uploadedFiles","console","log","hasUploadedFiles","uploadedFilesLength","length","formatValue","value","undefined","Array","isArray","join","JSON","stringify","String","formatFieldName","fieldName","replace","str","toUpperCase","trim","formatFileSize","bytes","k","sizes","i","Math","floor","round","pow","getFileTypeInfo","filename","label","className","ext","split","pop","toLowerCase","includes","organizeFilesByFolder","files","folderStructure","forEach","file","folderPath","folder","relativePath","substring","lastIndexOf","push","UploadedFilesSection","isExpanded","setIsExpanded","expandedFolders","setExpandedFolders","folderNames","Object","keys","sort","a","b","localeCompare","toggleExpanded","toggleFolder","folderName","prev","_objectSpread","totalFiles","totalFolders","filter","name","children","onClick","concat","width","height","viewBox","fill","stroke","strokeWidth","d","map","isFolder","isFolderExpanded","index","fileType","style","marginLeft","borderLeft","size","SubmissionDetails","expandedSections","setExpandedSections","useEffect","initialExpanded","key","toggleMainDetails","toggleSection","sectionKey","renderValue","shouldSkipField","fieldKey","fieldValue","_submissionData$addit","_submissionData$addit2","_submissionData$addit3","alwaysSkipFields","takeoffFields","modelFields","serviceType","additionalRequests","advancedUtilities","sectionExpanded","item","marginBottom","margin","slice","entries","_ref2","subKey","subValue","_ref3","filteredEntries","_ref4","_ref5","_ref6","xmlns","strokeLinecap","strokeLinejoin","points"],"sources":["/Users/adambower/Dev/ab-civil-website-preview/src/shared/components/ConfirmationPage/ConfirmationPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './ConfirmationPage.css';\n\nconst ConfirmationPage = ({ \n  title = \"Thank You!\", \n  message = \"Your submission has been received.\",\n  submissionData = null,\n  showDetails = false,\n  onNewSubmission = null,\n  customContent = null,\n  referenceNumber = null,\n  estimatedResponseTime = null,\n  uploadedFiles = null\n}) => {\n  // Debug logging for production\n  console.log('[ConfirmationPage] Props received:', {\n    hasUploadedFiles: !!uploadedFiles,\n    uploadedFilesLength: uploadedFiles ? uploadedFiles.length : 0,\n    uploadedFiles: uploadedFiles\n  });\n  const formatValue = (value) => {\n    if (value === null || value === undefined || value === '') {\n      return 'N/A';\n    }\n    if (Array.isArray(value)) {\n      // Check if array contains objects (like contacts)\n      if (value.length > 0 && typeof value[0] === 'object') {\n        return 'See details below';\n      }\n      return value.length > 0 ? value.join(', ') : 'None selected';\n    }\n    if (typeof value === 'boolean') {\n      return value ? 'Yes' : 'No';\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value, null, 2);\n    }\n    return String(value);\n  };\n\n  const formatFieldName = (fieldName) => {\n    return fieldName\n      .replace(/_/g, ' ')\n      .replace(/([A-Z])/g, ' $1')\n      .replace(/^./, str => str.toUpperCase())\n      .trim();\n  };\n\n  // Format file size\n  const formatFileSize = (bytes) => {\n    if (!bytes || bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];\n  };\n\n  // Get file type info based on filename\n  const getFileTypeInfo = (filename) => {\n    if (!filename) return { label: 'FILE', className: 'file-type-default' };\n    const ext = filename.split('.').pop().toLowerCase();\n    \n    if (['pdf'].includes(ext)) return { label: 'PDF', className: 'file-type-pdf' };\n    if (['jpg', 'jpeg', 'png', 'gif', 'webp', 'bmp'].includes(ext)) return { label: 'IMG', className: 'file-type-image' };\n    if (['zip', 'rar', '7z'].includes(ext)) return { label: 'ZIP', className: 'file-type-archive' };\n    if (['dwg', 'dxf', 'dwf'].includes(ext)) return { label: 'CAD', className: 'file-type-cad' };\n    if (['xls', 'xlsx', 'xlsm'].includes(ext)) return { label: 'XLS', className: 'file-type-excel' };\n    if (['txt', 'csv'].includes(ext)) return { label: 'TXT', className: 'file-type-text' };\n    if (['rvt', 'rfa', 'ifc'].includes(ext)) return { label: 'BIM', className: 'file-type-bim' };\n    return { label: 'FILE', className: 'file-type-default' };\n  };\n\n  // Organize files by folder structure\n  const organizeFilesByFolder = (files) => {\n    const folderStructure = {};\n    \n    files.forEach(file => {\n      // Get the folder path from the file\n      const folderPath = file.folder || (file.relativePath ? \n        file.relativePath.substring(0, file.relativePath.lastIndexOf('/')) : \n        '');\n      \n      // If no folder, put in root\n      const folder = folderPath || 'root';\n      \n      if (!folderStructure[folder]) {\n        folderStructure[folder] = [];\n      }\n      \n      folderStructure[folder].push(file);\n    });\n    \n    return folderStructure;\n  };\n\n  const UploadedFilesSection = () => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [expandedFolders, setExpandedFolders] = useState({});\n    \n    const folderStructure = organizeFilesByFolder(uploadedFiles);\n    const folderNames = Object.keys(folderStructure).sort((a, b) => {\n      if (a === 'root') return -1;\n      if (b === 'root') return 1;\n      return a.localeCompare(b);\n    });\n    \n    const toggleExpanded = () => {\n      setIsExpanded(!isExpanded);\n    };\n    \n    const toggleFolder = (folderName) => {\n      setExpandedFolders(prev => ({\n        ...prev,\n        [folderName]: !prev[folderName]\n      }));\n    };\n    \n    // Count total files\n    const totalFiles = uploadedFiles.length;\n    const totalFolders = folderNames.filter(name => name !== 'root').length;\n    \n    return (\n      <div className=\"confirmation-files-section\">\n        <div \n          className=\"confirmation-files-header clickable\"\n          onClick={toggleExpanded}\n        >\n          <svg \n            className={`confirmation-chevron ${isExpanded ? 'expanded' : ''}`}\n            width=\"20\" \n            height=\"20\" \n            viewBox=\"0 0 20 20\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n          >\n            <path d=\"M6 8l4 4 4-4\" />\n          </svg>\n          <h2 className=\"confirmation-files-title\">\n            Uploaded Files \n            <span className=\"files-summary\">\n              ({totalFiles} {totalFiles === 1 ? 'file' : 'files'}{totalFolders > 0 ? ` in ${totalFolders} ${totalFolders === 1 ? 'folder' : 'folders'}` : ''})\n            </span>\n          </h2>\n        </div>\n        \n        {isExpanded && (\n          <div className=\"confirmation-files-content\">\n            <div className=\"confirmation-folders-list\">\n              {folderNames.map(folderName => {\n                const isFolder = folderName !== 'root';\n                const isFolderExpanded = expandedFolders[folderName] !== false;\n                const files = folderStructure[folderName];\n                \n                return (\n                  <div key={folderName} className={isFolder ? \"folder-group\" : \"root-files\"}>\n                    {isFolder ? (\n                      <>\n                        <div className=\"folder-header\">\n                          <svg \n                            className=\"folder-icon\"\n                            width=\"15\" \n                            height=\"15\" \n                            viewBox=\"0 0 16 16\" \n                            fill=\"currentColor\"\n                          >\n                            <path d=\"M9.828 3h3.982a2 2 0 0 1 1.992 2.181l-.637 7A2 2 0 0 1 13.174 14H2.826a2 2 0 0 1-1.991-1.819l-.637-7a1.99 1.99 0 0 1 .342-1.31L.5 3a2 2 0 0 1 2-2h3.672a2 2 0 0 1 1.414.586l.828.828A2 2 0 0 0 9.828 3z\"/>\n                          </svg>\n                          <span className=\"folder-name\">{folderName}</span>\n                          <span className=\"folder-file-count\">({files.length} files)</span>\n                        </div>\n                        {files.map((file, index) => {\n                          const fileType = getFileTypeInfo(file.filename || file.name);\n                          return (\n                            <div key={index} className=\"file-item compact\" style={{ marginLeft: '20px', borderLeft: '1px dashed #d1d5db' }}>\n                              <div className=\"file-info\">\n                                <span className={`file-type-badge ${fileType.className}`}>\n                                  {fileType.label}\n                                </span>\n                                <span className=\"file-name\">{file.filename || file.name}</span>\n                                <span className=\"file-size\">{formatFileSize(file.size)}</span>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </>\n                    ) : (\n                      files.map((file, index) => {\n                        const fileType = getFileTypeInfo(file.filename || file.name);\n                        return (\n                          <div key={index} className=\"file-item compact\">\n                            <div className=\"file-info\">\n                              <span className={`file-type-badge ${fileType.className}`}>\n                                {fileType.label}\n                              </span>\n                              <span className=\"file-name\">{file.filename || file.name}</span>\n                              <span className=\"file-size\">{formatFileSize(file.size)}</span>\n                            </div>\n                          </div>\n                        );\n                      })\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const SubmissionDetails = () => {\n    const [isExpanded, setIsExpanded] = useState(true);\n    const [expandedSections, setExpandedSections] = useState({});\n    \n    React.useEffect(() => {\n      // Initialize all sections as expanded\n      if (submissionData) {\n        const initialExpanded = {};\n        Object.keys(submissionData).forEach(key => {\n          if (typeof submissionData[key] === 'object' && submissionData[key] !== null) {\n            initialExpanded[key] = true;\n          }\n        });\n        setExpandedSections(initialExpanded);\n      }\n    }, []);\n    \n    const toggleMainDetails = () => {\n      setIsExpanded(!isExpanded);\n    };\n    \n    const toggleSection = (sectionKey) => {\n      setExpandedSections(prev => ({\n        ...prev,\n        [sectionKey]: !prev[sectionKey]\n      }));\n    };\n\n    const renderValue = (key, value) => {\n      // Skip fields that are N/A, null, undefined, or empty\n      const shouldSkipField = (fieldKey, fieldValue) => {\n        // Fields to skip for all forms\n        const alwaysSkipFields = ['platform', 'platform_other', 'dealer_name', 'contractor_name', 'other_source_detail', 'fileAttachments', 'phone', 'state'];\n        \n        // Takeoff-specific fields to skip when serviceType is \"3D Model\"\n        const takeoffFields = ['cadAvailable', 'scopeOptions', 'strippingDepth', 'replacementDepth'];\n        \n        // Model-specific fields to skip when serviceType is \"Takeoff\"\n        const modelFields = ['revision', 'fileFormats', 'additionalRequests', 'erosionSurfaceDueDate', 'advancedUtilities', 'structureCount'];\n        \n        // Skip if it's an always-skip field (regardless of value for fileAttachments)\n        if (alwaysSkipFields.includes(fieldKey)) {\n          return true;\n        }\n        \n        // Skip takeoff fields for 3D Model forms\n        if (submissionData?.serviceType === '3D Model' && takeoffFields.includes(fieldKey)) {\n          return true;\n        }\n        \n        // Skip model fields for Takeoff forms\n        if (submissionData?.serviceType === 'Takeoff' && modelFields.includes(fieldKey)) {\n          return true;\n        }\n        \n        // Skip conditional fields that weren't selected/enabled\n        // Hide erosion surface due date if Initial Erosion Surface wasn't selected\n        if (fieldKey === 'erosionSurfaceDueDate' && \n            (!submissionData?.additionalRequests?.includes('Initial Erosion Surface') || !fieldValue)) {\n          return true;\n        }\n        \n        // Hide advanced utilities if 3D/Elevated Pipe wasn't selected OR if advanced utilities checkbox wasn't checked\n        if (fieldKey === 'advancedUtilities' && \n            (!submissionData?.additionalRequests?.includes('3D/Elevated Pipe') || !fieldValue)) {\n          return true;\n        }\n        \n        // Hide structure count if 3D/Elevated Pipe wasn't selected OR advanced utilities isn't enabled or has no value\n        if (fieldKey === 'structureCount' && \n            (!submissionData?.additionalRequests?.includes('3D/Elevated Pipe') || !submissionData?.advancedUtilities || !fieldValue)) {\n          return true;\n        }\n        \n        // Hide project info and special instructions if empty\n        if ((fieldKey === 'projectInfo' || fieldKey === 'specialInstructions') && \n            (!fieldValue || fieldValue === null || fieldValue === undefined || fieldValue === '')) {\n          return true;\n        }\n        \n        return false;\n      };\n\n      // Don't render if this field should be skipped\n      if (shouldSkipField(key, value)) {\n        return null;\n      }\n\n      // Handle arrays of objects (like contacts)\n      if (Array.isArray(value) && value.length > 0 && typeof value[0] === 'object') {\n        const sectionExpanded = expandedSections[key] !== false;\n        return (\n          <div key={key} className=\"confirmation-section\">\n            <div \n              className=\"confirmation-section-header clickable\"\n              onClick={() => toggleSection(key)}\n            >\n              <svg \n                className={`confirmation-dropdown-arrow ${sectionExpanded ? 'expanded' : ''}`}\n                width=\"12\" \n                height=\"12\" \n                viewBox=\"0 0 12 12\"\n                fill=\"currentColor\"\n              >\n                <path d=\"M3 5l3 3 3-3z\"/>\n              </svg>\n              <h3 className=\"confirmation-section-title\">{formatFieldName(key)} ({value.length})</h3>\n            </div>\n            {sectionExpanded && (\n              <div className=\"confirmation-section-body\">\n                {value.map((item, index) => (\n                  <div key={index} className=\"confirmation-section-content\" style={{ marginBottom: '15px' }}>\n                    <h4 style={{ margin: '10px 0 5px 0' }}>{formatFieldName(key).slice(0, -1)} {index + 1}</h4>\n                    {Object.entries(item)\n                      .filter(([subKey, subValue]) => !shouldSkipField(subKey, subValue))\n                      .map(([subKey, subValue]) => (\n                        <div key={subKey} className=\"confirmation-detail-row\">\n                          <span className=\"confirmation-detail-label\">{formatFieldName(subKey)}:</span>\n                          <span className=\"confirmation-detail-value\">{formatValue(subValue)}</span>\n                        </div>\n                      ))}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        );\n      }\n      \n      // Handle single objects\n      if (typeof value === 'object' && !Array.isArray(value) && value !== null) {\n        const filteredEntries = Object.entries(value)\n          .filter(([subKey, subValue]) => !shouldSkipField(subKey, subValue));\n        \n        // Don't render empty sections\n        if (filteredEntries.length === 0) return null;\n        \n        const sectionExpanded = expandedSections[key] !== false;\n        \n        return (\n          <div key={key} className=\"confirmation-section\">\n            <div \n              className=\"confirmation-section-header clickable\"\n              onClick={() => toggleSection(key)}\n            >\n              <svg \n                className={`confirmation-dropdown-arrow ${sectionExpanded ? 'expanded' : ''}`}\n                width=\"12\" \n                height=\"12\" \n                viewBox=\"0 0 12 12\"\n                fill=\"currentColor\"\n              >\n                <path d=\"M3 5l3 3 3-3z\"/>\n              </svg>\n              <h3 className=\"confirmation-section-title\">{formatFieldName(key)}</h3>\n            </div>\n            {sectionExpanded && (\n              <div className=\"confirmation-section-body\">\n                <div className=\"confirmation-section-content\">\n                  {filteredEntries.map(([subKey, subValue]) => (\n                    <div key={subKey} className=\"confirmation-detail-row\">\n                      <span className=\"confirmation-detail-label\">{formatFieldName(subKey)}:</span>\n                      <span className=\"confirmation-detail-value\">{formatValue(subValue)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      }\n\n      return (\n        <div key={key} className=\"confirmation-detail-row\">\n          <span className=\"confirmation-detail-label\">{formatFieldName(key)}:</span>\n          <span className=\"confirmation-detail-value\">{formatValue(value)}</span>\n        </div>\n      );\n    };\n\n    if (!submissionData || !showDetails) return null;\n    \n    return (\n      <div className=\"confirmation-details\">\n        <div \n          className=\"confirmation-details-header\"\n          onClick={toggleMainDetails}\n        >\n          <svg \n            className={`confirmation-dropdown-arrow ${isExpanded ? 'expanded' : ''}`}\n            width=\"16\" \n            height=\"16\" \n            viewBox=\"0 0 16 16\"\n            fill=\"currentColor\"\n          >\n            <path d=\"M4 6l4 4 4-4z\"/>\n          </svg>\n          <h2 className=\"confirmation-details-title\">Submission Details</h2>\n        </div>\n        {isExpanded && (\n          <div className=\"confirmation-details-content\">\n            {Object.entries(submissionData).map(([key, value]) => renderValue(key, value))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"confirmation-page\">\n      <div className=\"confirmation-container\">\n        <div className=\"confirmation-icon\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"checkmark-icon\"\n          >\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" />\n            <polyline points=\"22 4 12 14.01 9 11.01\" />\n          </svg>\n        </div>\n\n        <h1 className=\"confirmation-title\">{title}</h1>\n        <p className=\"confirmation-message\">{message}</p>\n\n\n\n        {customContent && (\n          <div className=\"confirmation-custom-content\">\n            {customContent}\n          </div>\n        )}\n\n        {submissionData && showDetails && <SubmissionDetails />}\n\n        {/* File Upload Preview Section */}\n        {uploadedFiles && uploadedFiles.length > 0 ? (\n          <UploadedFilesSection />\n        ) : (\n          console.log('[ConfirmationPage] No uploaded files to display')\n        )}\n\n        <div className=\"confirmation-footer\">\n          <p>If you have any questions, please contact us at support@ab-civil.com</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}