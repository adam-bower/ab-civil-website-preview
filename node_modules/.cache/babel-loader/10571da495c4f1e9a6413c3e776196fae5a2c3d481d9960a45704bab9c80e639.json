{"ast":null,"code":"var _jsxFileName = \"/Users/adambower/Dev/new-website-adam/website/src/shared/components/AutoResizeWrapper/AutoResizeWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './AutoResizeWrapper.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoResizeWrapper = ({\n  children,\n  padding = 20\n}) => {\n  _s();\n  const contentRef = useRef(null);\n  const [lastHeight, setLastHeight] = useState(0);\n  const resizeObserverRef = useRef(null);\n  const mutationObserverRef = useRef(null);\n  const rafRef = useRef(null);\n\n  // Function to calculate and send height\n  const updateHeight = () => {\n    if (!contentRef.current) return;\n\n    // Cancel any pending animation frame\n    if (rafRef.current) {\n      cancelAnimationFrame(rafRef.current);\n    }\n    rafRef.current = requestAnimationFrame(() => {\n      if (!contentRef.current) return;\n\n      // Get the actual height of the content\n      const contentHeight = contentRef.current.scrollHeight;\n      const totalHeight = contentHeight + padding;\n\n      // Only send update if height has changed\n      if (totalHeight !== lastHeight) {\n        setLastHeight(totalHeight);\n\n        // Send height to parent frame (Wix)\n        if (window.parent !== window) {\n          window.parent.postMessage({\n            type: 'resize-iframe',\n            height: totalHeight,\n            source: 'ab-civil-form'\n          }, '*');\n          console.log('Height update sent to parent:', totalHeight);\n        }\n\n        // Also try Wix-specific method if available\n        if (window.Wix && window.Wix.setHeight) {\n          window.Wix.setHeight(totalHeight);\n        }\n      }\n    });\n  };\n\n  // Debounced update function\n  const debouncedUpdate = (() => {\n    let timeoutId;\n    return () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        updateHeight();\n      }, 100);\n    };\n  })();\n  useEffect(() => {\n    var _contentRef$current;\n    // Initial height update\n    updateHeight();\n\n    // Set up ResizeObserver for element size changes\n    if (window.ResizeObserver && contentRef.current) {\n      resizeObserverRef.current = new ResizeObserver(entries => {\n        for (let entry of entries) {\n          debouncedUpdate();\n        }\n      });\n      resizeObserverRef.current.observe(contentRef.current);\n    }\n\n    // Set up MutationObserver for DOM changes\n    if (window.MutationObserver && contentRef.current) {\n      mutationObserverRef.current = new MutationObserver(mutations => {\n        // Check if any mutations actually affected layout\n        const hasLayoutChange = mutations.some(mutation => {\n          return mutation.type === 'childList' || mutation.type === 'attributes' && (mutation.attributeName === 'style' || mutation.attributeName === 'class');\n        });\n        if (hasLayoutChange) {\n          debouncedUpdate();\n        }\n      });\n      mutationObserverRef.current.observe(contentRef.current, {\n        attributes: true,\n        childList: true,\n        subtree: true,\n        attributeFilter: ['style', 'class']\n      });\n    }\n\n    // Listen for window resize events\n    const handleResize = () => {\n      debouncedUpdate();\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Listen for custom events that might trigger height changes\n    const handleFormChange = () => {\n      debouncedUpdate();\n    };\n    window.addEventListener('form-content-changed', handleFormChange);\n\n    // Listen for image loads within the content\n    const images = ((_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.getElementsByTagName('img')) || [];\n    const imageLoadHandlers = [];\n    Array.from(images).forEach(img => {\n      if (!img.complete) {\n        const handler = () => debouncedUpdate();\n        img.addEventListener('load', handler);\n        imageLoadHandlers.push({\n          img,\n          handler\n        });\n      }\n    });\n\n    // Update on any animation frames for smooth transitions\n    let animationId;\n    const checkHeight = () => {\n      updateHeight();\n      animationId = requestAnimationFrame(checkHeight);\n    };\n\n    // Start checking but stop after 2 seconds to save resources\n    animationId = requestAnimationFrame(checkHeight);\n    const stopAnimationTimeout = setTimeout(() => {\n      cancelAnimationFrame(animationId);\n    }, 2000);\n\n    // Cleanup\n    return () => {\n      if (resizeObserverRef.current) {\n        resizeObserverRef.current.disconnect();\n      }\n      if (mutationObserverRef.current) {\n        mutationObserverRef.current.disconnect();\n      }\n      if (rafRef.current) {\n        cancelAnimationFrame(rafRef.current);\n      }\n      cancelAnimationFrame(animationId);\n      clearTimeout(stopAnimationTimeout);\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('form-content-changed', handleFormChange);\n      imageLoadHandlers.forEach(({\n        img,\n        handler\n      }) => {\n        img.removeEventListener('load', handler);\n      });\n    };\n  }, []); // Empty dependency array for mount-only effect\n\n  // Trigger update when children change\n  useEffect(() => {\n    debouncedUpdate();\n  }, [children]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: contentRef,\n    className: \"auto-resize-wrapper\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoResizeWrapper, \"HkvUzTDABNSt3NuLnvKTXSTyVKk=\");\n_c = AutoResizeWrapper;\nexport default AutoResizeWrapper;\nvar _c;\n$RefreshReg$(_c, \"AutoResizeWrapper\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","AutoResizeWrapper","children","padding","_s","contentRef","lastHeight","setLastHeight","resizeObserverRef","mutationObserverRef","rafRef","updateHeight","current","cancelAnimationFrame","requestAnimationFrame","contentHeight","scrollHeight","totalHeight","window","parent","postMessage","type","height","source","console","log","Wix","setHeight","debouncedUpdate","timeoutId","clearTimeout","setTimeout","_contentRef$current","ResizeObserver","entries","entry","observe","MutationObserver","mutations","hasLayoutChange","some","mutation","attributeName","attributes","childList","subtree","attributeFilter","handleResize","addEventListener","handleFormChange","images","getElementsByTagName","imageLoadHandlers","Array","from","forEach","img","complete","handler","push","animationId","checkHeight","stopAnimationTimeout","disconnect","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adambower/Dev/new-website-adam/website/src/shared/components/AutoResizeWrapper/AutoResizeWrapper.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './AutoResizeWrapper.css';\n\nconst AutoResizeWrapper = ({ children, padding = 20 }) => {\n  const contentRef = useRef(null);\n  const [lastHeight, setLastHeight] = useState(0);\n  const resizeObserverRef = useRef(null);\n  const mutationObserverRef = useRef(null);\n  const rafRef = useRef(null);\n\n  // Function to calculate and send height\n  const updateHeight = () => {\n    if (!contentRef.current) return;\n\n    // Cancel any pending animation frame\n    if (rafRef.current) {\n      cancelAnimationFrame(rafRef.current);\n    }\n\n    rafRef.current = requestAnimationFrame(() => {\n      if (!contentRef.current) return;\n\n      // Get the actual height of the content\n      const contentHeight = contentRef.current.scrollHeight;\n      const totalHeight = contentHeight + padding;\n\n      // Only send update if height has changed\n      if (totalHeight !== lastHeight) {\n        setLastHeight(totalHeight);\n        \n        // Send height to parent frame (Wix)\n        if (window.parent !== window) {\n          window.parent.postMessage({\n            type: 'resize-iframe',\n            height: totalHeight,\n            source: 'ab-civil-form'\n          }, '*');\n          \n          console.log('Height update sent to parent:', totalHeight);\n        }\n\n        // Also try Wix-specific method if available\n        if (window.Wix && window.Wix.setHeight) {\n          window.Wix.setHeight(totalHeight);\n        }\n      }\n    });\n  };\n\n  // Debounced update function\n  const debouncedUpdate = (() => {\n    let timeoutId;\n    return () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        updateHeight();\n      }, 100);\n    };\n  })();\n\n  useEffect(() => {\n    // Initial height update\n    updateHeight();\n\n    // Set up ResizeObserver for element size changes\n    if (window.ResizeObserver && contentRef.current) {\n      resizeObserverRef.current = new ResizeObserver((entries) => {\n        for (let entry of entries) {\n          debouncedUpdate();\n        }\n      });\n      resizeObserverRef.current.observe(contentRef.current);\n    }\n\n    // Set up MutationObserver for DOM changes\n    if (window.MutationObserver && contentRef.current) {\n      mutationObserverRef.current = new MutationObserver((mutations) => {\n        // Check if any mutations actually affected layout\n        const hasLayoutChange = mutations.some(mutation => {\n          return mutation.type === 'childList' || \n                 mutation.type === 'attributes' && \n                 (mutation.attributeName === 'style' || \n                  mutation.attributeName === 'class');\n        });\n        \n        if (hasLayoutChange) {\n          debouncedUpdate();\n        }\n      });\n\n      mutationObserverRef.current.observe(contentRef.current, {\n        attributes: true,\n        childList: true,\n        subtree: true,\n        attributeFilter: ['style', 'class']\n      });\n    }\n\n    // Listen for window resize events\n    const handleResize = () => {\n      debouncedUpdate();\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Listen for custom events that might trigger height changes\n    const handleFormChange = () => {\n      debouncedUpdate();\n    };\n    window.addEventListener('form-content-changed', handleFormChange);\n\n    // Listen for image loads within the content\n    const images = contentRef.current?.getElementsByTagName('img') || [];\n    const imageLoadHandlers = [];\n    \n    Array.from(images).forEach(img => {\n      if (!img.complete) {\n        const handler = () => debouncedUpdate();\n        img.addEventListener('load', handler);\n        imageLoadHandlers.push({ img, handler });\n      }\n    });\n\n    // Update on any animation frames for smooth transitions\n    let animationId;\n    const checkHeight = () => {\n      updateHeight();\n      animationId = requestAnimationFrame(checkHeight);\n    };\n    \n    // Start checking but stop after 2 seconds to save resources\n    animationId = requestAnimationFrame(checkHeight);\n    const stopAnimationTimeout = setTimeout(() => {\n      cancelAnimationFrame(animationId);\n    }, 2000);\n\n    // Cleanup\n    return () => {\n      if (resizeObserverRef.current) {\n        resizeObserverRef.current.disconnect();\n      }\n      if (mutationObserverRef.current) {\n        mutationObserverRef.current.disconnect();\n      }\n      if (rafRef.current) {\n        cancelAnimationFrame(rafRef.current);\n      }\n      cancelAnimationFrame(animationId);\n      clearTimeout(stopAnimationTimeout);\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('form-content-changed', handleFormChange);\n      \n      imageLoadHandlers.forEach(({ img, handler }) => {\n        img.removeEventListener('load', handler);\n      });\n    };\n  }, []); // Empty dependency array for mount-only effect\n\n  // Trigger update when children change\n  useEffect(() => {\n    debouncedUpdate();\n  }, [children]);\n\n  return (\n    <div ref={contentRef} className=\"auto-resize-wrapper\">\n      {children}\n    </div>\n  );\n};\n\nexport default AutoResizeWrapper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}